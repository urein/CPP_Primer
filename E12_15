struct destination {};
struct connection {};

connection connect(destination* p)
{
	cout << "open a link ..." << endl;
	return connection();
}

void disconnect(connection)
{
	cout << "close a link ... " << endl;
}


void f(destination& d)
{
	cout << "self manage connect" << endl;
	connection c = connect(&d);
	/*
	* forget to call disconnect
	*/
	cout << endl;
}

void f1(destination& d)
{
	cout << "manage connect by shared_ptr" << endl;
	connection c = connect(&d);
	shared_ptr<connection> pc(&c, [](connection* p) {disconnect(*p); });
	/*
	* forget to call disconnect, but it's okey
	*/
	cout << endl;
}

int main()
{
	destination des;
	f1(des);

	return 0;
}
